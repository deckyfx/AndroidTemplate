// Automatic versioning, how to use
//def INCREASE_VERSION_NAME_WHEN_RUN_TASK = "build"
//def INCREASE_VERSION_CODE_WHEN_RUN_TASK = ""
//apply from: 'https://raw.githubusercontent.com/deckyfx/AndroidTemplate/master/automatic-versioning.gradle'

import java.util.regex.Pattern

task incrementVersionCode << {
    println(":incrementVersionCode - Incrementing Version Code...")
    def manifestFile = file("src/main/AndroidManifest.xml")
    def propertiesFile = new File("${project.projectDir}/gradle.properties")
    propertiesFile.createNewFile()
    def patternVersionCode = Pattern.compile("versionCode=\"?(\\d+)\"?")
    def manifestText = manifestFile.getText()
    def propertiesText = propertiesFile.getText()
    def manifestMatcherVersionCode = patternVersionCode.matcher(manifestText)
    def propertiesMatcherVersionCode = patternVersionCode.matcher(propertiesText)
    def mVersionCode = 0
    if (propertiesMatcherVersionCode.find()) {
        mVersionCode = Integer.parseInt(propertiesMatcherVersionCode.group(1))
    }
    def mNextVersionCode = mVersionCode + 1
    def manifestContent = ''
    if (propertiesMatcherVersionCode.find()) {
        propertiesContent = propertiesMatcherVersionCode.replaceAll("versionCode=" + mNextVersionCode)
    } else {
        propertiesContent = "versionName=" + mNextVersionName + "\n" + "versionCode=0"
    }
    println(":incrementVersionCode - current versionCode=" + mVersionCode);
    println(":incrementVersionCode - next versionCode=" + mNextVersionCode);
    manifestFile.write(manifestContent)
    propertiesFile.write(propertiesContent)
}

task incrementVersionName << {
    println(":incrementVersionName - Incrementing Version Name...")
    def manifestFile = file("src/main/AndroidManifest.xml")
    def propertiesFile = new File("${project.projectDir}/gradle.properties")
    propertiesFile.createNewFile()
    println(propertiesFile)
    def patternVersionNumber = Pattern.compile("versionName=\"?(\\d+)\\.(\\d+)\\.(\\d+)\"?")
    def manifestText = manifestFile.getText()
    def propertiesText = propertiesFile.getText()
    def manifestMatcherVersionNumber = patternVersionNumber.matcher(manifestText)
    def propertiesMatcherVersionNumber = patternVersionNumber.matcher(propertiesText)
    def majorVersion = 0
    def minorVersion = 0
    def pointVersion = 0
    if (propertiesMatcherVersionNumber.find()) {
        majorVersion = Integer.parseInt(propertiesMatcherVersionNumber.group(1))
        minorVersion = Integer.parseInt(propertiesMatcherVersionNumber.group(2))
        pointVersion = Integer.parseInt(propertiesMatcherVersionNumber.group(3))
    }
    def mVersionName = majorVersion + "." + minorVersion + "." + pointVersion
    def mNextVersionName = majorVersion + "." + minorVersion + "." + (pointVersion + 1)
    def manifestContent = manifestMatcherVersionNumber.replaceAll("versionName=\"" + mNextVersionName + "\"")
    def propertiesContent = ''
    if (propertiesMatcherVersionNumber.find()) {
        propertiesContent = propertiesMatcherVersionNumber.replaceAll("versionName=" + mNextVersionName)
    } else {
        propertiesContent = "versionName=" + mNextVersionName + "\n" + "versionCode=0"
    }
    println(":incrementVersionName - current versionName=" + mVersionName);
    println(":incrementVersionName - new versionName=" + mNextVersionName);
    manifestFile.write(manifestContent)
    propertiesFile.write(propertiesContent)
}

task release << {
    println(":release - Build and Version Increment")
}

task debug << {
    println(":debug - Build")
}

def foundTask = null
def taskName = ""
if (binding.variables.containsKey('INCREASE_VERSION_NAME_WHEN_RUN_TASK')) {
    taskName = ":" + project.name + ":" + INCREASE_VERSION_NAME_WHEN_RUN_TASK
} else {
    taskName = ":" + project.name + ":" + 'generateDebugBuildConfig'
}
foundTask = tasks.findByPath(taskName)
if (foundTask != null) {
    task.dependsOn 'incrementVersionName'
} else {
    println("Task " + taskName + " not found to increase version name");
}

if (binding.variables.containsKey('INCREASE_VERSION_CODE_WHEN_RUN_TASK')) {
    taskName = ":" + project.name + ":" + INCREASE_VERSION_CODE_WHEN_RUN_TASK
    foundTask = tasks.findByPath(taskName)
    if (foundTask != null) {
        task.dependsOn 'incrementVersionCode'
    } else {
        println("Task " + ":" + project.name + ":" + taskName + " not found to increase version name");
    }
} 
